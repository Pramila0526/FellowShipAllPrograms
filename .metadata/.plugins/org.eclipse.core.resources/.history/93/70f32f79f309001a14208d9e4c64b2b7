package com.bridgelabz.fellowshipprogramss.utility;

import java.util.Random;
import java.util.Scanner;
public class Teller
{

	Customer c=new Customer();

 	int  runTime, customerArrival, transactionTime;
 	Queue2 q=new Queue2();
    int customers=0;



  public Teller(int run, int maxNewCustomer, int maxHandle)
	 {
		runTime= run;
    	customerArrival= maxNewCustomer;
    	transactionTime = maxHandle;
	 }//end constructor

	 public int runTime(){
 	   return runTime;
 	 }//end runTime

 	 public int getTransactionTime(){
 	   return transactionTime;
 	 }//endTransactionTime

 	 public int getCustomerArrival(){
 	   return customerArrival;
 	 }//end getCustomerArrival

     public void Run()
	  {

		  Random rand= new Random();

		  int newArrival = rand.nextInt(customerArrival);
		  customerArrival=newArrival;
		  q.empty();
		  int time;
		  Customer next=new Customer();
		  for(time=0;time<runTime; time++)
		  {
			if(q.empty()==false)
			{
			if(c.currentTime>=customerArrival)
			  {
				q.enqueue(next);
				customers++;

			  }else if(customerArrival>transactionTime)
			  {

				  q.dequeue();
				  customers++;
				  int nextArrival = rand.nextInt(customerArrival);
		  	      customerArrival=newArrival;
		  	      nextArrival=c.clock+nextArrival;

			  }//end if
		  	}//end if
		  }//end for
	  }//end Run
	  public void report()
	  {
		  int totalTime=c.clock;
		  System.out.println(totalTime);
		  int Average=totalTime/customers;
		  		  System.out.println(Average);

		  int numberServed=customers;
		  		  System.out.println(numberServed);

		  if(q.empty()==true)
		  {
			  System.out.println(q.toString());
			  System.out.println(c.clock);
		  }//end if
	  }//end report

	   public static void main(String[]args)
	  	  {



	  		  Scanner key=new Scanner(System.in);
	  		  System.out.println("how many seconds to run: ");
	  		  int newRunTime=key.nextInt();
	  		  System.out.println("max time between customers: ");
	  		  int newCustomerArrival=key.nextInt();
	  		  System.out.println("max processing time: ");
	  		  int newTransTime=key.nextInt();
	  		  Teller t= new Teller(newRunTime,newCustomerArrival,newTransTime);
	  		  t.Run();
	  		  t.report();

	  	  }//end main
}

