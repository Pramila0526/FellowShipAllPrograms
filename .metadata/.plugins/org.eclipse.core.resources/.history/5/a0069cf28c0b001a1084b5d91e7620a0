package com.bridgelabz.fellowshipprogramss.datastructure;

import java.util.Scanner;

public class OrderedList
{
	static Scanner sc=new Scanner(System.in);
	public static int IntegerInput()
	{
		return sc.nextInt();
	}
    Node start;
   // NodeUtility nu=new NodeUtility();
    //Utility u1=new Utility();

    // get data From a file
    public class Node<E>
    {
    	public String data1;
    	public int data;
    	public Node nextNode;
    	
    	//constructor
    	public Node()
    	{
    		this.nextNode=null;
    	}

    	public void setData(String data1)
    	{
    		this.data1=data1;
    		nextNode=null;
    	}
    	
    	public void setData(int data)
    	{
    		this.data=data;
    		nextNode=null;
    	}
    }

    // Function for Lsit
    public void List()
    {
        if(start ==null)
        {
            System.out.println("List is Empty ");
        }
    }

    // add item Function
    public void insert(int data)
    {
        Node head =start;
        Node temp =new Node();
        temp.data =data;
        temp.nextNode =null;
        if(start == null)
        {
            start = temp;
        }
        else
        {
            while(head.nextNode != null)
            {
                head=head.nextNode;
            }
            head.nextNode=temp;
        }
    }

   // Display Function
   public  void display()
   {
        Node temp =start;
        while( temp != null)
        {
            System.out.print(temp.data+"---->");
            temp=temp.nextNode;
        }
        System.out.println(" ");
    }

   // Size of Function
   public  int size()
   {
        int count=0;
        Node temp =start;
        while( temp.nextNode != null)
        {
            temp=temp.nextNode;
            count++;
        }
        System.out.println("sizze of Linked List"+count);
        return count;
   }

   // Serching of a Word Function
   public void searchData()
   {
        Node temp = start;
        int count=0;
        System.out.println("Enter a number to Search");
        int s =IntegerInput();
        int flag=0;
        while(temp.nextNode != null)
        {
            count++;
            if( temp.data==s)
            {
                System.out.println(" number is found At "+count);
                flag++;
                break;
            }
            temp=temp.nextNode;
        }

        if(flag == 1)
        {
            removeData(count);
        }
        else
        {
            addItem(s);
            System.out.println("After Adding a LIst ");
            display();
        }
    }

    // removeWord From a Linked lIst
    void removeData(int count)
    {
        Node temp = start;
        if(count==1)
        {
            start =start.nextNode;
            System.out.println("After Deleting LIst is ");
            display();
        }
        else
        {
	     for(int i=0;i<count-1;i++)
	     {
		 	temp=temp.nextNode;
	     }
        temp.nextNode =temp.nextNode.nextNode;
        System.out.println("After Deleting LIst is ");
        display();
        }
    }

    public static void main(String[] args)
    {
        OrderedList obj = new OrderedList();
        obj.insert(IntegerInput());
        obj.display();
        obj.size();
       	obj.searchData();
    }
}